{{- if eq .chezmoi.os "darwin" -}}
#!/usr/bin/env bash

{{ template "shared_script_utils.bash" . }}

export HOMEBREW_NO_INSTALL_UPGRADE=TRUE
export HOMEBREW_CASK_OPTS="--appdir=/Applications"
export HOMEBREW_NO_INSTALL_CLEANUP=1

formulae=(
    {{ range $package := .packages.homebrew.common.formulae }}
    "{{ $package }}"
    {{ end }}

    {{ if .dev_computer }}
    {{ range $package := .packages.homebrew.dev_computer.formulae }}
    "{{ $package }}"
    {{ end }}
    {{ end }}

    {{ if .homelab_member }}
    {{ range $package := .packages.homebrew.homelab_member.formulae }}
    "{{ $package }}"
    {{ end }}
    {{ end }}

    {{ if .personal_computer }}
    {{ range $package := .packages.homebrew.personal_computer.formulae }}
    "{{ $package }}"
    {{ end }}
    {{ end }}
)

casks=(
    {{ range $package := .packages.homebrew.common.casks }}
    "{{ $package }}"
    {{ end }}

    {{ if .dev_computer }}
    {{ range $package := .packages.homebrew.dev_computer.casks }}
    "{{ $package }}"
    {{ end }}
    {{ end }}

    {{ if .homelab_member }}
    {{ range $package := .packages.homebrew.homelab_member.casks }}
    "{{ $package }}"
    {{ end }}
    {{ end }}

    {{ if .personal_computer }}
    {{ range $package := .packages.homebrew.personal_computer.casks }}
    "{{ $package }}"
    {{ end }}
    {{ end }}
)

# Initialize empty arrays to avoid issues with unbound variables
currently_installed_formulae=()
currently_installed_casks=()

# Safely populate arrays with installed packages if any exist
if brew list --formula &>/dev/null; then
    # Use basic array assignment for better compatibility
    currently_installed_formulae=( $(brew list --formula -1 || echo "") )
fi

if brew list --cask &>/dev/null; then
    currently_installed_casks=( $(brew list --cask -1 || echo "") )
fi

# Enable safe array expansion
set -o nounset

header "Install Homebrew packages"

brew update

BREW_DIR="$(brew --prefix)/bin/"

for formula in "${formulae[@]:-}"; do
    if ! _inArray_ -i "${formula}" "${currently_installed_formulae[@]:-}"; then
        if [[ ! -e "${BREW_DIR}/${formula}" ]]; then
            echo "Installing formula: ${formula}"
            brew install -q --formula ${formula} || {
                echo "Failed to install ${formula}, continuing with next package..."
                continue
            }
        fi

        # https://github.com/microsoft/Git-Credential-Manager-for-Mac-and-Linux/blob/master/Install.md
        if [[ ${formula} == "git-credential-manager" ]]; then
            git-credential-manager install || echo "Failed to install git-credential-manager, continuing..."
        fi
    fi
done

{{ if not .is_ci_workflow }}
for cask in "${casks[@]:-}"; do
    if ! _inArray_ -i "${cask}" "${currently_installed_casks[@]:-}"; then
        echo "Installing cask: ${cask}"
        brew install -q --cask ${cask} || {
            echo "Failed to install ${cask}, continuing with next package..."
            continue
        }
    fi
done
{{ end }}

success "Homebrew packages installed"

_safeExit_

{{- end }}